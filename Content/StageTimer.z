class StageTimer : ZilchComponent
{

    var Ginga1: Level = Level.Find("Ginga_1");
    var Ginga2: Level = Level.Find("Ginga_2");
    var Ginga3: Level = Level.Find("Ginga_3");
    
    var Eternal1: Level = Level.Find("Eternal_1");
    var Eternal2: Level = Level.Find("Eternal_2");

        var Time : Real = 0;
        var Seconds : Real = 0;
        var Minutes : Real = 0;
        var Hours : Real = 0;
        
        var HSecond : Real = 0;
        var HMinute : Real = 0;
        var HHour : Real = 0;
        
        //var TimeString : String = "00:00:00";
        var DataCog : Cog = null;
        
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        
        this.DataCog = Zero.ObjectStore.RestoreOrArchetype("Data", "SavedData", this.Space);
        this.Space.FindObjectByName("bTime").SpriteText.Text = "`this.DataCog.SavedTime.Ginga1`";
    }

    function OnLogicUpdate(event : UpdateEvent)
    {

        var display = this.Space.FindObjectByName("timeDisplay");
        var pB = this.Space.FindObjectByName("bestTime");

        
this.Time += event.Dt;    

    if(this.Time > 1){
        this.Time = 0;
        this.Seconds += 1;
            if(this.Seconds > 9){
                this.HSecond += 1;
                this.Seconds = 0;
                    if(this.HSecond > 5){
                        this.Minutes += 1;
                        this.HSecond = 0;
                            if(this.Minutes > 9){
                                this.HMinute += 1;
                                this.Minutes = 0;
                                    if(this.HMinute > 5){
                                        this.Hours += 1;
                                        this.HMinute = 0;
                                            if(this.Hours > 9){
                                                this.HHour += 1;
                                                this.Hours = 0;
                                            }
                                    }
                            }
                    }
            }
    }

        var curTime : String = "`this.HHour``this.Hours`:`this.HMinute``this.Minutes`:`this.HSecond``this.Seconds`";
        
        if(this.Space.FindObjectByName("FOmark").TimeSaveFlag.Save == true){
            if(this.Space.CurrentLevel == this.Ginga1){
                this.DataCog.SavedTime.Ginga1 = curTime;
                Zero.ObjectStore.Store("Data", this.DataCog);
            }
            if(this.Space.CurrentLevel == this.Ginga2){
                this.DataCog.SavedTime.Ginga2 = curTime;
                Zero.ObjectStore.Store("Data", this.DataCog);
            }
            if(this.Space.CurrentLevel == this.Ginga3){
                this.DataCog.SavedTime.Ginga3 = curTime;
                Zero.ObjectStore.Store("Data", this.DataCog);
            }


            if(this.Space.CurrentLevel == this.Eternal1){
                this.DataCog.SavedTime.Eternal1 = curTime;
                Zero.ObjectStore.Store("Data", this.DataCog);
            }
            if(this.Space.CurrentLevel == this.Eternal2){
                this.DataCog.SavedTime.Eternal2 = curTime;
                Zero.ObjectStore.Store("Data", this.DataCog);
            }
        }
    
        display.SpriteText.Text = "`this.HHour``this.Hours`:`this.HMinute``this.Minutes`:`this.HSecond``this.Seconds`";
        
        //pB.SpriteText.Text = "`this.DataCog.SavedTime.Time`";

        
        /*if(this.Space.FindObjectByName("Goal").TimeSaveFlag.Save == true){
            Zero.ObjectStore.Store("TimeData", this.DataCog);
            Console.WriteLine("connected");
        }*/
        
       // Console.WriteLine("current saved time is `this.DataCog.SavedTime.Time`");
    }



}
